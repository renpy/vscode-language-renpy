{
  "name": "language-renpy",
  "displayName": "Ren'Py Language (8.3+)",
  "description": "Adds rich support for the Ren'Py programming language to Visual Studio Code.",
  "version": "2.5.2",
  "publisher": "renpy",
  "license": "MIT",
  "homepage": "https://github.com/renpy/vscode-language-renpy",
  "repository": {
    "type": "git",
    "url": "https://github.com/renpy/vscode-language-renpy"
  },
  "bugs": {
    "url": "https://github.com/renpy/vscode-language-renpy/issues"
  },
  "icon": "icon.png",
  "galleryBanner": {
    "color": "#734675",
    "theme": "dark"
  },
  "keywords": [
    "python",
    "renpy"
  ],
  "categories": [
    "Programming Languages",
    "Snippets"
  ],
  "engines": {
    "vscode": "^1.103.0"
  },
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": true
    }
  },
  "activationEvents": [
    "workspaceContains:**/*.rpy",
    "workspaceContains:**/_ren.py",
    "onDebugResolve:renpy"
  ],
  "main": "./dist/extension",
  "browser": "./dist/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "renpy",
        "aliases": [
          "Ren'Py",
          "renpy",
          "rpy"
        ],
        "extensions": [
          ".rpy",
          ".rpym",
          ".rpymc",
          ".rpyc"
        ],
        "configuration": "./language-configuration.json",
        "firstLine": "^#!\\s*/?.*\\brenpy\\b",
        "icon": {
          "light": "./renpy.svg",
          "dark": "./renpy.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "renpy",
        "scopeName": "source.renpy",
        "path": "./syntaxes/renpy.tmLanguage.json"
      },
      {
        "scopeName": "source.renpy.screen",
        "path": "./syntaxes/renpy.screen.tmLanguage.json"
      },
      {
        "scopeName": "source.renpy.style",
        "path": "./syntaxes/renpy.style.tmLanguage.json"
      },
      {
        "scopeName": "source.renpy.atl",
        "path": "./syntaxes/renpy.atl.tmLanguage.json"
      },
      {
        "scopeName": "source.renpy.python",
        "path": "./syntaxes/renpy.python.tmLanguage.json"
      },
      {
        "scopeName": "renpy.comment.injection",
        "path": "./syntaxes/renpy.injection.json",
        "injectTo": [
          "source.python"
        ],
        "embeddedLanguages": {
          "meta.embedded.renpy": "renpy"
        }
      },
      {
        "scopeName": "markdown.renpy.codeblock",
        "path": "./syntaxes/renpy.markdown.json",
        "injectTo": [
          "text.html.markdown"
        ],
        "embeddedLanguages": {
          "meta.embedded.renpy": "renpy"
        }
      },
      {
        "scopeName": "text.log.injection",
        "path": "./syntaxes/log.injection.json",
        "injectTo": [
          "text.log"
        ]
      }
    ],
    "snippets": [
      {
        "language": "renpy",
        "path": "./snippets/snippets.json"
      }
    ],
    "commands": [
      {
        "command": "renpy.refreshNavigationData",
        "title": "Renpy: Refresh Ren'Py Navigation Data"
      },
      {
        "command": "renpy.compileNavigationData",
        "title": "Renpy: Compile Ren'Py Navigation Data"
      },
      {
        "command": "renpy.refreshDiagnostics",
        "title": "Renpy: Refresh Ren'Py diagnostics for the active editor window"
      },
      {
        "command": "renpy.toggleTokenDebugView",
        "title": "Renpy: Toggle token debug visualization"
      },
      {
        "command": "renpy.migrateOldFiles",
        "title": "Renpy: Cleanup unused compiled Ren'Py source files"
      },
      {
        "command": "renpy.runCommand",
        "title": "Renpy: Run Project",
        "category": "Run",
        "icon": "$(play)"
      }
    ],
    "debuggers": [
      {
        "type": "renpy",
        "label": "Ren'Py",
        "languages": [
          "renpy"
        ],
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [],
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to run Ren'Py with.",
                "default": "run"
              },
              "args": {
                "type": "array",
                "description": "Args to run Ren'Py with.",
                "default": []
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "renpy",
            "request": "launch",
            "name": "Ren'Py: Launch",
            "command": "run",
            "args": []
          }
        ],
        "configurationSnippets": [
          {
            "label": "Ren'Py",
            "description": "A new configuration for launching a Ren'Py project",
            "body": {
              "type": "renpy",
              "request": "launch",
              "name": "Ren'Py",
              "command": "run",
              "args": []
            }
          }
        ]
      }
    ],
    "taskDefinitions": [
      {
        "type": "renpy",
        "required": [
          "command"
        ],
        "properties": {
          "command": {
            "type": "string",
            "description": "Command to run Ren'Py with.",
            "default": "run"
          },
          "args": {
            "type": "array",
            "description": "Args to run Ren'Py with.",
            "default": []
          }
        }
      }
    ],
    "configuration": [
      {
        "title": "Ren'Py",
        "properties": {
          "renpy.excludeCompiledFilesFromWorkspace": {
            "type": "boolean",
            "default": true,
            "description": "Exclude *.rpyc, *.rpa, *.rpymc files and the cache/ folder from the workspace explorer. (This will add a .vscode settings file to your workspace)"
          },
          "renpy.watchFoldersForChanges": {
            "type": "boolean",
            "default": false,
            "description": "Watch resource folders, such as images and audio, for file changes. (This may not be fully supported on all platforms.)"
          },
          "renpy.showAutomaticImagesInCompletion": {
            "type": "boolean",
            "default": true,
            "description": "Show Automatic Images in the displayable auto-completion list. If not checked (false), only images defined in the script will be shown. If checked (true), both script-defined images and images detected in the images folders will be shown."
          },
          "renpy.diagnostics.diagnosticMode": {
            "type": "string",
            "default": "openFilesOnly",
            "enum": [
              "openFilesOnly",
              "workspace"
            ],
            "enumDescriptions": [
              "Only diagnoses open files.",
              "Diagnose all Ren'Py files in the workspace. This mode applies recursive expressions that can be resource-intensive in projects with a large codebase."
            ],
            "description": "Select whether to analyze all Ren'Py files in the workspace or only open files (default)."
          },
          "renpy.diagnostics.warnOnObsoleteMethods": {
            "type": "boolean",
            "default": true,
            "description": "Enable obsolete method warnings. If checked (true), obsolete methods (e.g., im.Crop) will be marked with a warning in the editor."
          },
          "renpy.diagnostics.warnOnUndefinedPersistents": {
            "type": "boolean",
            "default": true,
            "description": "Enable undefined persistent warnings. If checked (true), persistent variables will be marked with a warning in the editor if they haven't been defaulted/defined."
          },
          "renpy.diagnostics.warnOnUndefinedStoreVariables": {
            "type": "boolean",
            "default": true,
            "description": "Enable undefined store variable warnings. If checked (true), store variables will be marked with a warning in the editor if they haven't been defaulted/defined."
          },
          "renpy.diagnostics.warnOnReservedVariableNames": {
            "type": "boolean",
            "default": true,
            "description": "Enable reserved variable warnings. If checked (true), variables will be marked with an error in the editor if they are in the list of names reserved by Python."
          },
          "renpy.diagnostics.warnOnInvalidVariableNames": {
            "type": "boolean",
            "default": true,
            "description": "Enable invalid variable errors. Variables must begin with a letter or number. They may contain a '_' but may not begin with '_'. If set to true, variables will be flagged in the editor if they do not meet Ren'Py's specifications."
          },
          "renpy.diagnostics.warnOnIndentationAndSpacingIssues": {
            "type": "string",
            "default": "Error",
            "enum": [
              "Error",
              "Warning",
              "Disabled"
            ],
            "enumDescriptions": [
              "Display indentation issues as errors",
              "Display indentation issues as warnings",
              "Ignore indentation issues"
            ],
            "description": "Enable indentation and inconsistent spacing checks. If set to Error or Warning, tab characters and inconsistent indentation spacing will be marked in the editor. If set to Disabled, indentation issues will be ignored."
          },
          "renpy.diagnostics.warnOnInvalidFilenameIssues": {
            "type": "string",
            "default": "Error",
            "enum": [
              "Error",
              "Warning",
              "Disabled"
            ],
            "enumDescriptions": [
              "Display filename issues as errors",
              "Display filename issues as warnings",
              "Ignore filename issues"
            ],
            "description": "Enable filename checks. Filenames must begin with a letter or number, and may not begin with '00', as Ren'Py uses such files for its own purposes. If set to Error or Warning, documents will be marked in the editor if the document filename does not meet Ren'Py's specifications. If set to Disabled, filename issues will be ignored."
          },
          "renpy.renpyExecutableLocation": {
            "type": "string",
            "default": "",
            "description": "Location of Ren'Py installation. Should be .exe on Windows and .sh on Mac/Linux."
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "prepare": "husky install",
    "package": "webpack --mode production --devtool hidden-source-map",
    "build": "webpack --mode development",
    "build:release": "webpack --mode production",
    "watch": "npm run build -- --watch",
    "watch:release": "npm run build:release -- --watch",
    "pretest": "webpack --mode development",
    "test": "vscode-test",
    "test:coverage": "npm run test -- --coverage",
    "lint": "eslint -c eslint.config.mjs",
    "vsce:package": "vsce package -o language-renpy.vsix",
    "format": "prettier --write .",
    "format:check": "prettier --check ."
  },
  "lint-staged": {
    "*.{js,ts}": [
      "eslint -c eslint.config.mjs --fix --quiet"
    ],
    "*.{js,ts,json,jsonc,yml,yaml}": [
      "prettier --write"
    ]
  },
  "prettier": {
    "printWidth": 150,
    "tabWidth": 4,
    "useTabs": false,
    "semi": true,
    "singleQuote": false,
    "quoteProps": "as-needed",
    "trailingComma": "es5",
    "bracketSpacing": true,
    "bracketSameLine": false,
    "arrowParens": "always",
    "endOfLine": "lf",
    "overrides": [
      {
        "files": [
          "*.yml",
          "*.yaml"
        ],
        "options": {
          "tabWidth": 2
        }
      },
      {
        "files": [
          "*.json"
        ],
        "options": {
          "tabWidth": 2,
          "printWidth": 80
        }
      }
    ]
  },
  "devDependencies": {
    "@eslint/compat": "^1.3.2",
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.33.0",
    "@types/chai": "^5.2.2",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.3.0",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "1.103",
    "@types/webpack": "^5.28.5",
    "@typescript-eslint/eslint-plugin": "^8.39.1",
    "@typescript-eslint/parser": "^8.39.1",
    "@vscode/debugadapter": "^1.68.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.0",
    "chai": "^5.2.1",
    "copy-webpack-plugin": "^13.0.1",
    "eslint": "^9.33.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "eslint-plugin-unused-imports": "^4.1.4",
    "fork-ts-checker-webpack-plugin": "^9.1.0",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.5",
    "node-polyfill-webpack-plugin": "^4.1.0",
    "prettier": "^3.6.2",
    "sinon": "^21.0.0",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.9.2",
    "vscode-test": "^1.6.1",
    "webpack": "^5.101.2",
    "webpack-cli": "^6.0.1"
  }
}
