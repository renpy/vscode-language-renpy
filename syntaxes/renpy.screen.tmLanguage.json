{
  "information_for_contributors": ["Please remeber to regenerate the ts token patterns using the 'syntax-to-token-pattern.py' python script"],
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Ren'Py Screen",
  "scopeName": "source.renpy.screen",
  "patterns": [{ "include": "#screen-language" }],
  "repository": {
    "builtin-screens": {
      "name": "support.function.builtin.screen.renpy",
      "match": "(?<!\\.)\\b(?:start|quit|after_load|splashscreen|before_main_menu|main_menu|after_warp|hide_windows)\\b"
    },
    "screen-def-name": {
      "comment": "TODO: Should combine this with label-def-name",
      "patterns": [
        { "include": "source.renpy.python#builtin-possible-callables" },
        { "include": "#builtin-screens" },
        {
          "match": "(?<=^|[ \\t])(\\b(?:[a-zA-Z_]\\w*)\\b)?(\\.)?(\\b(?:[a-zA-Z_]\\w*)\\b)",
          "captures": {
            "1": { "name": "entity.name.function.renpy" },
            "2": { "name": "punctuation.separator.period.renpy" },
            "3": { "name": "entity.name.function.renpy" }
          }
        }
      ]
    },
    "screen-build-in-properties": {
      "comment": "These are the ATL keywords, will need to fix this later",
      "patterns": [
        {
          "comment": "Special manipulation keywords",
          "match": "\\b(?<!\\.)(?:(warp)|(circles)|(clockwise)|(counterclockwise))\\b",
          "captures": {
            "1": { "name": "keyword.warp.renpy" },
            "2": { "name": "keyword.circles.renpy" },
            "3": { "name": "keyword.clockwise.renpy" },
            "4": { "name": "keyword.counterclockwise.renpy" }
          }
        },
        {
          "comment": "Special manipulation keywords",
          "match": "\\b(?<!\\.)(key|input|(image)?button|grid|auto|mousearea|side|timer|[vh]?bar|viewport|scrollbars|mousewheel|vpgrid|imagemap)\\b",
          "captures": {
            "1": { "name": "keyword.other.renpy" }
          }
        },
        {
          "comment": "Random props",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:[xy]padding|area|(un)?hovered|draggable|cols|spacing|side_[xy]align)\\b"
        },
        {
          "comment": "position props (int, absolute, or a float)",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:xpos|ypos|xanchor|yanchor|xcenter|ycenter|radius)\\b"
        },
        {
          "comment": "position pair props",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:pos|anchor|xycenter|around|alignaround|matrixanchor)\\b"
        },
        {
          "comment": "float props",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:xalign|yalign|zoom|xzoom|yzoom|alpha|additive|angle|delay|events|zpos)\\b"
        },
        {
          "comment": "float pair props",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:align|knot)\\b"
        },
        {
          "comment": "int props",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:xoffset|yoffset|xtile|ytile|size)\\b"
        },
        {
          "comment": "int pair props",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:offset)\\b"
        },
        {
          "comment": "boolean props",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:rotate_pad|transform_anchor|nearest|crop_relative|subpixel|zzoom)\\b"
        },
        {
          "comment": "('#float' | None)",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:rotate|xpan|ypan|blur)\\b"
        },
        {
          "comment": "('#position' | None)",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:xsize|ysize)\\b"
        },
        {
          "comment": "('\\(int, int, int, int\\)' | '\\(float, float, float, float\\)' | None)",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:crop)\\b"
        },
        {
          "comment": "('\\(int, int\\)' | None)",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:corner1|corner2)\\b"
        },
        {
          "comment": "('\\(position, position\\)' | None)",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:xysize)\\b"
        },
        {
          "comment": "('#string' | None)",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:fit)\\b"
        },
        {
          "comment": "('\\(int, int\\)' | None)",
          "name": "invalid.deprecated.renpy",
          "match": "\\b(?<!\\.)(?:size|maxsize)\\b"
        },
        {
          "comment": "('#Matrix' | '#MatrixColor' | None)",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:matrixcolor)\\b"
        },
        {
          "comment": "('#Matrix' | '#TransformMatrix' | None)",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:matrixtransform)\\b"
        },
        {
          "comment": "('#bool' | '#float' | '\\(float, float, float\\)')",
          "name": "entity.name.tag.css.transform.renpy",
          "match": "\\b(?<!\\.)(?:perspective)\\b"
        }
      ]
    },
    "screen-simple-expression": {
      "patterns": [
        { "include": "source.renpy#renpy-only-expressions" },
        { "include": "#screen-build-in-properties" },
        { "include": "source.renpy.python#member-access" },
        { "include": "source.renpy.python#illegal-operator" },
        { "include": "source.renpy.python#operator" },
        { "include": "source.renpy.python#curly-braces" },
        { "include": "source.renpy.python#item-access" },
        { "include": "source.renpy.python#list" },
        { "include": "source.renpy.python#odd-function-call" },
        { "include": "source.renpy.python#round-braces" },
        { "include": "source.renpy.python#function-call" },
        { "include": "source.renpy.python#builtin-functions" },
        { "include": "source.renpy.python#builtin-types" },
        { "include": "source.renpy.python#builtin-exceptions" },
        { "include": "source.renpy.python#magic-names" },
        { "include": "source.renpy.python#special-names" },
        { "include": "source.renpy.python#illegal-names" },
        { "include": "source.renpy.python#special-variables" },
        { "include": "source.renpy.python#ellipsis" },
        { "include": "source.renpy.python#punctuation" },
        { "include": "source.renpy.python#line-continuation" }
      ]
    },
    "screen-keywords": {
      "comment": "https://www.renpy.org/doc/html/screens.html#screen-statement",
      "patterns": [
        {
          "contentName": "meta.screen.sensitive.renpy",
          "begin": "(?<=^[ \\t]*)(sensitive)\\b[ \\t]*",
          "beginCaptures": {
            "1": { "name": "keyword.sensitive.renpy" }
          },
          "end": "$",
          "patterns": [{ "include": "#screen-simple-expression" }]
        },
        {
          "name": "keyword.other.renpy",
          "match": "\\b(?<!\\.)(?:modal|sensitive|tag|zorder|variant|layer|roll_forward|text)\\b"
        },
        {
          "name": "keyword.other.renpy",
          "match": "\\b(?<!\\.)(?:style|style_group|style_prefix)\\b"
        },
        {
          "name": "keyword.other.renpy",
          "match": "\\b(?<!\\.)(?:has|vbox|hbox|label|add|xfill)\\b"
        }
      ]
    },
    "screen-frame": {
      "contentName": "meta.screen.frame.renpy",
      "begin": "^([ \\t]+)?(frame)\\b[ \\t]*(:)",
      "beginCaptures": {
        "1": { "name": "punctuation.whitespace.leading.block.renpy" },
        "2": { "name": "keyword.frame.renpy" },
        "3": { "name": "punctuation.section.block.begin.renpy" }
      },
      "end": "^(?=(?!\\1)[ \\t]*[^\\s#]|\\1[^\\s#])",
      "patterns": [{ "include": "#screen-language" }]
    },
    "screen-window": {
      "contentName": "meta.screen.window.renpy",
      "begin": "^([ \\t]+)?(window)\\b[ \\t]*(:)",
      "beginCaptures": {
        "1": { "name": "punctuation.whitespace.leading.block.renpy" },
        "2": { "name": "keyword.window.renpy" },
        "3": { "name": "punctuation.section.block.begin.renpy" }
      },
      "end": "^(?=(?!\\1)[ \\t]*[^\\s#]|\\1[^\\s#])",
      "patterns": [{ "include": "#screen-language" }]
    },
    "screen-text": {
      "contentName": "meta.screen.text.renpy",
      "begin": "^([ \\t]+)?(text)\\b[ \\t]*(:)",
      "beginCaptures": {
        "1": { "name": "punctuation.whitespace.leading.block.renpy" },
        "2": { "name": "keyword.text.renpy" },
        "3": { "name": "punctuation.section.block.begin.renpy" }
      },
      "end": "^(?=(?!\\1)[ \\t]*[^\\s#]|\\1[^\\s#])",

      "patterns": [
        {
          "name": "meta.screen.text.renpy",
          "contentName": "meta.atl-block.renpy",
          "begin": "^([ \\t]+)?(text)\\b[ \\t]*([a-zA-Z_0-9 ]*)(:)",
          "beginCaptures": {
            "1": { "name": "punctuation.whitespace.leading.renpy" },
            "2": { "name": "keyword.text.renpy" },
            "3": { "name": "entity.name.type.text.renpy" },
            "4": { "name": "punctuation.section.atl.begin.renpy" }
          },
          "end": "^(?=(?!\\1)[ \\t]*[^\\s#]|\\1[^\\s#])",
          "patterns": [{ "include": "source.renpy.atl" }]
        },
        {
          "name": "meta.screen.text.renpy",
          "begin": "(?<=^[ \\t]*)(text)\\b[ \\t]*",
          "beginCaptures": {
            "1": { "name": "keyword.text.renpy" }
          },
          "end": "(?=\\b(at)\\b|#|=)|$",
          "patterns": [
            { "include": "source.renpy#strings" },
            {
              "match": "\\b(?:[a-zA-Z_0-9]+)\\b[ \\t]*",
              "name": "entity.name.type.text.renpy"
            }
          ]
        },
        { "include": "source.renpy#at-statement" }
      ]
    },
    "screen-box": {
      "contentName": "meta.screen.block.renpy",
      "begin": "^([ \\t]+)?(?:(vbox)|(hbox))\\b[ \\t]*(?:.*?)(:)",
      "beginCaptures": {
        "1": { "name": "punctuation.whitespace.leading.block.renpy" },
        "2": { "name": "keyword.vbox.renpy" },
        "3": { "name": "keyword.hbox.renpy" },
        "4": { "name": "punctuation.section.block.begin.renpy" }
      },
      "end": "^(?=(?!\\1)[ \\t]*[^\\s#]|\\1[^\\s#])",
      "patterns": [{ "include": "#screen-language" }]
    },
    "screen": {
      "patterns": [
        {
          "comment": "See https://www.renpy.org/doc/html/screens.html",
          "contentName": "meta.screen.block.renpy",
          "begin": "^([ \\t]+)?(screen)\\b[ \\t]*(.*?)(:)",
          "beginCaptures": {
            "1": { "name": "punctuation.whitespace.leading.block.renpy" },
            "2": { "name": "storage.type.function.renpy" },
            "3": {
              "patterns": [{ "include": "#screen-def-name" }, { "include": "source.renpy.python#parameters" }, { "include": "source.renpy#invalid-token" }]
            },
            "4": { "name": "punctuation.section.block.begin.renpy" }
          },
          "end": "^(?=(?!\\1)[ \\t]*[^\\s#]|\\1[^\\s#])",
          "patterns": [{ "include": "#screen-language" }]
        }
      ]
    },

    "screen-fallback": {
      "comment": "TODO: This is a temp fix for missing pattern references",
      "patterns": [{ "include": "source.renpy#base-patterns" }]
    },

    "screen-language": {
      "comment": "https://www.renpy.org/doc/html/screens.html#screen-language",
      "patterns": [
        { "include": "source.renpy#conditionals" },
        { "include": "#screen-frame" },
        { "include": "#screen-window" },
        { "include": "#screen-box" },
        { "include": "#screen-text" },
        { "include": "#screen-keywords" },
        { "include": "#screen-simple-expression" },
        { "include": "#screen-fallback" }
      ]
    }
  }
}
